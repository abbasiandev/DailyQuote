name: Build and Release
on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        
    - name: Setup Gradle
      uses: gradle/gradle-build-action@v3
      
    - name: Make gradlew executable
      run: chmod +x ./gradlew
      
    - name: List available projects
      run: ./gradlew projects
      
    - name: Build Android APK (try multiple common module names)
      run: |
        # Try different common module names for Android in KMP projects
        if ./gradlew :androidApp:assembleRelease 2>/dev/null; then
          echo "Built with :androidApp:assembleRelease"
          echo "APK_PATH=androidApp/build/outputs/apk/release/*.apk" >> $GITHUB_ENV
        elif ./gradlew :android:assembleRelease 2>/dev/null; then
          echo "Built with :android:assembleRelease"
          echo "APK_PATH=android/build/outputs/apk/release/*.apk" >> $GITHUB_ENV
        elif ./gradlew :app:assembleRelease 2>/dev/null; then
          echo "Built with :app:assembleRelease"
          echo "APK_PATH=app/build/outputs/apk/release/*.apk" >> $GITHUB_ENV
        elif ./gradlew assembleRelease 2>/dev/null; then
          echo "Built with assembleRelease (root)"
          echo "APK_PATH=build/outputs/apk/release/*.apk" >> $GITHUB_ENV
        else
          echo "Failed to find Android module. Available projects:"
          ./gradlew projects
          echo "Available tasks:"
          ./gradlew tasks | grep -i assemble || echo "No assemble tasks found"
          exit 1
        fi
      
    - name: Verify APK exists
      run: |
        echo "Looking for APK at: $APK_PATH"
        ls -la $(dirname $APK_PATH) || echo "APK directory not found"
        ls -la $APK_PATH || echo "APK file not found"
      
    - name: Get tag name
      id: tag
      run: echo "TAG_NAME=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
      
    - name: Create Release with APK
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ steps.tag.outputs.TAG_NAME }}
        name: DailyQuote ${{ steps.tag.outputs.TAG_NAME }} - Cross-Platform Mobile App
        body: |
          üöÄ **New Release: DailyQuote ${{ steps.tag.outputs.TAG_NAME }}**
          
          Modern **Kotlin Multiplatform Mobile** app for daily inspirational quotes!
          
          ## üì± Downloads
          - **Android APK**: Download from the assets below
          - **iOS**: Coming soon! (Build from source for now)
          
          ## üåü Key Features
          - **Cross-platform** mobile app (Android & iOS)
          - **Kotlin Multiplatform** shared business logic
          - **Jetpack Compose** for Android UI
          - **SwiftUI** for iOS UI
          - **Offline-first architecture**
          - **Clean Architecture** implementation
          
          ## üì± Platforms Supported
          - ‚úÖ **Android** (API 24+)
          - ‚úÖ **iOS** (14.0+)
          
          ## üõ†Ô∏è For Developers
          Perfect project for learning:
          - **Kotlin Multiplatform Mobile** development
          - **Modern declarative UI** frameworks
          - **Cross-platform** mobile architecture
          - **Clean coding** practices
          
          ## üöÄ Getting Started
          1. Clone the repository
          2. Follow README setup instructions
          3. Build and run on your platform
          
          **Star ‚≠ê this repo if you find it helpful!**
          
          #KotlinMultiplatform #MobileApp #CrossPlatform #Android #iOS #JetpackCompose #SwiftUI #CleanArchitecture
        files: ${{ env.APK_PATH }}
        draft: false
        prerelease: false
        generate_release_notes: true
